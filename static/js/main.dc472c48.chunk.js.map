{"version":3,"sources":["components/UI/button/TaskButton.jsx","components/UI/input/TaskInput.jsx","components/TaskItem.jsx","App.js","index.js","components/UI/button/TaskButton.module.css","components/UI/input/TaskInput.module.css"],"names":["TaskButton","children","props","className","classes","Task__button","TaskInput","taskInput","TaskItem","useState","isEdit","setIsEdit","taskTitle","task","taskText","editInput","setEditInput","number","value","onChange","event","target","type","placeholder","onClick","edit","id","remove","App","tasks","setTasks","removeTask","currentTask","filter","t","editTask","originalTask","find","setTaskInput","preventDefault","newTask","Date","now","length","map","index","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.dc472c48.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from \"./TaskButton.module.css\";\r\n\r\nconst TaskButton = ({ children, ...props }) => {\r\n  return (\r\n    <button {...props} className={classes.Task__button}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default TaskButton;\r\n","import React from \"react\";\r\nimport classes from \"./TaskInput.module.css\";\r\n\r\nconst TaskInput = (props) => {\r\n  return <input {...props} className={classes.taskInput} />;\r\n};\r\n\r\nexport default TaskInput;\r\n","import React, { useState } from \"react\";\r\nimport TaskButton from \"./UI/button/TaskButton\";\r\nimport TaskInput from \"./UI/input/TaskInput\";\r\n\r\nconst TaskItem = (props) => {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n  const [editInput, setEditInput] = useState({\r\n    taskTitle: props.task.taskTitle,\r\n    taskText: props.task.taskText,\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"task\">\r\n        <div className=\"task__content\">\r\n          <strong>\r\n            {props.number}. {props.task.taskTitle}\r\n          </strong>\r\n          <div>{props.task.taskText}</div>\r\n          {isEdit && (\r\n            <div>\r\n              <TaskInput\r\n                value={editInput.taskTitle}\r\n                onChange={(event) =>\r\n                  setEditInput({ ...editInput, taskTitle: event.target.value })\r\n                }\r\n                type=\"text\"\r\n                placeholder=\"Добавить название задачи\"\r\n              />\r\n              <TaskInput\r\n                value={editInput.taskText}\r\n                onChange={(event) =>\r\n                  setEditInput({ ...editInput, taskText: event.target.value })\r\n                }\r\n                type=\"text\"\r\n                placeholder=\"Добавить описание задачи\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"task__buttons\">\r\n          <TaskButton\r\n            onClick={() => {\r\n              if (isEdit) {\r\n                props.edit(editInput, props.task.id);\r\n                setIsEdit(!isEdit);\r\n              } else setIsEdit(!isEdit);\r\n            }}\r\n          >\r\n            {isEdit ? \"Сохранить изменения\" : \"Редактировать задачу\"}\r\n          </TaskButton>\r\n          <TaskButton onClick={() => props.remove(props.task)}>\r\n            Удалить задачу\r\n          </TaskButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","import React, { useState } from \"react\";\nimport TaskItem from \"./components/TaskItem\";\nimport TaskButton from \"./components/UI/button/TaskButton\";\nimport TaskInput from \"./components/UI/input/TaskInput\";\nimport \"./styles/App.css\";\n\nfunction App() {\n  // Массив для хранения задач\n  const [tasks, setTasks] = useState([]);\n\n  // Колбэк - удаление функции\n  const removeTask = (currentTask) => {\n    setTasks(tasks.filter((t) => t.id !== currentTask.id));\n  };\n\n  const editTask = (editInput, id) => {\n    const originalTask = tasks.find((task) => task.id === id);\n    originalTask.taskTitle = editInput.taskTitle;\n    originalTask.taskText = editInput.taskText;\n  };\n\n  // Управление инпутами формы создания задачи\n  const [taskInput, setTaskInput] = useState({ taskTitle: \"\", taskText: \"\" });\n\n  // Функция - создание задачи\n  const addNewTask = (event) => {\n    event.preventDefault();\n\n    const newTask = { ...taskInput, id: Date.now() };\n    setTasks([...tasks, newTask]);\n\n    setTaskInput({ taskTitle: \"\", taskText: \"\" });\n  };\n\n  return (\n    <div className=\"App\">\n      <form>\n        <TaskInput\n          value={taskInput.taskTitle}\n          onChange={(event) =>\n            setTaskInput({ ...taskInput, taskTitle: event.target.value })\n          }\n          type=\"text\"\n          placeholder=\"Название задачи\"\n        />\n\n        <TaskInput\n          value={taskInput.taskText}\n          onChange={(event) =>\n            setTaskInput({ ...taskInput, taskText: event.target.value })\n          }\n          type=\"text\"\n          placeholder=\"Описание задачи\"\n        />\n\n        <TaskButton onClick={addNewTask}>Добавить задачу</TaskButton>\n      </form>\n\n      {tasks.length !== 0 ? (\n        <div>\n          <h1 className=\"main__title\">ToDo - список задач</h1>\n          {tasks.map((task, index) => (\n            <TaskItem\n              remove={removeTask}\n              edit={editTask}\n              number={index + 1}\n              task={task}\n              key={task.id}\n            />\n          ))}\n        </div>\n      ) : (\n        <h1 className=\"taskList__placeholder\">Задачи отсутствуют</h1>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Task__button\":\"TaskButton_Task__button__1ReER\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskInput\":\"TaskInput_taskInput__1e7zO\"};"],"sourceRoot":""}